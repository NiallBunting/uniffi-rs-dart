{%- let rec = ci|get_record_definition(name) %}
// Generated By RecordTemplate: 1
class {{ type_name }} {
    {% for field in rec.fields() %}
        final {{ field|type_name }} {{ field.name()|var_name }};
    {%- endfor %}

    {{ type_name }}({ {% for field in rec.fields() %}
    {%- if field.default_value().is_some() %}
      required this.{{ field.name()|var_name }}/* = _DEFAULT*/
    {% else %}
      required this.{{ field.name()|var_name }}
    {% endif %}
    {%- if !loop.last %}, {% endif %}
    {%- endfor %} }); 

    @override
    String toString() {
        return "{{ type_name }}()";
    }

    @override
    bool operator ==(Object other) {
      if (other is {{ type_name }} ) {
        {%- for field in rec.fields() %}
          if ({{ field.name()|var_name }} != other.{{ field.name()|var_name }}) {
              return false;
          }
        {%- endfor %}
        return true;
      }
      return false;
    } 

    //@override
    //int get hashCode => this.tires * this.doors;
}

// Generated By RecordTemplate: 2
class {{ ffi_converter_name }} extends _UniffiConverterRustBuffer {

   read(_UniffiRustBufferBuilder buf) {
      return {{ type_name }}(
        {%- for field in rec.fields() %}
        {{ field.name()|var_name }}: {{ field|read_fn }}(buf),
        {%- endfor %}
      );
   }

   _UniffiRustBufferBuilder write(buf, value) {
        /*{%- for field in rec.fields() %}
        //{{ field|write_fn }}(value.{{ field.name()|var_name }}, buf)
        {%- endfor %}*/
     return buf;
   }
}
